---
   - name: Yum Repo | Make insightRepo Directory
     file:
       path: /var/insightRepo
       state: directory
     when: ansible_pkg_mgr == 'yum'
   - name: Yum Repo | Copy RPM packages(This might take a while...)
     copy:
       src: ../files/packages/rpm/
       dest: /var/insightRepo/
       directory_mode: yes
     when: ansible_pkg_mgr == 'yum'
   - name: Yum Repo | Install RPM package libxml2-python
     yum:
       name: /var/insightRepo/libxml2-python-2.9.1-6.el7_2.3.x86_64.rpm
       state: present
       disablerepo: '*'
     when: ansible_pkg_mgr == 'yum'
   - name: Yum Repo | Install RPM package deltarpm
     yum:
       name: /var/insightRepo/deltarpm-3.6-3.el7.x86_64.rpm
       state: present
       disablerepo: '*'
     when: ansible_pkg_mgr == 'yum'
   - name: Yum Repo | Install RPM package python-deltarpm
     yum:
       name: /var/insightRepo/python-deltarpm-3.6-3.el7.x86_64.rpm
       state: present
       disablerepo: '*'
     when: ansible_pkg_mgr == 'yum'
   - name: Yum Repo | Install RPM package createrepo
     yum:
       name: /var/insightRepo/createrepo-0.9.9-26.el7.noarch.rpm
       state: present
       disablerepo: '*'
     when: ansible_pkg_mgr == 'yum'
   - name : Yum Repo | Run Create Repo Command
     command: sudo createrepo /var/insightRepo
     when: ansible_pkg_mgr == 'yum'
   - name: Yum Repo | Add insightfinder repo
     yum_repository:
       name: insightrepo
       description: Insightfinder Repo
       baseurl: file:///var/insightRepo
       enabled: yes
       gpgcheck: no
     when: ansible_pkg_mgr == 'yum'
   - name: Install package dependencies - Add Open SUSE Ruby Devel Repo SLES
     become: yes
     shell: "http_proxy={{ http_proxy }} zypper rr devel_languages_ruby_extensions && zypper addrepo http://download.opensuse.org/repositories/devel:/languages:/ruby:/extensions/SLE_12/devel:languages:ruby:extensions.repo"
     when: ansible_pkg_mgr == 'zypper'
   - name: Install package dependencies - Add Open SUSE Ruby Devel Repo
     become: yes
     shell: "http_proxy={{ http_proxy }} zypper rr devel_languages_ruby && zypper addrepo http://download.opensuse.org/repositories/devel:/languages:/ruby/openSUSE_Leap_42.1/devel:languages:ruby.repo"
     when: ansible_pkg_mgr == 'zypper'
   - name: Install package dependencies - Add Open OSS Repo
     become: yes
     shell: "http_proxy={{ http_proxy }} zypper rr OPEN_SUSE_OSS && zypper ar -f http://download.opensuse.org/distribution/leap/42.3/repo/oss/ OPEN_SUSE_OSS"
     when: ansible_pkg_mgr == 'zypper'
   - name: Install package dependencies - Add Open SUSE Perl Repo
     become: yes
     shell: "http_proxy={{ http_proxy }} zypper rr devel_languages_perl && zypper addrepo http://download.opensuse.org/repositories/devel:/languages:/perl/SLE_12_SP3/devel:languages:perl.repo "
     when: ansible_pkg_mgr == 'zypper'
   - name: Install package dependencies - Add Open SUSE Dev Tools Repo
     become: yes
     shell: "http_proxy={{ http_proxy }} zypper rr devel_tools_scm && zypper addrepo http://download.opensuse.org/repositories/devel:/tools:/scm/SLE_12_SP3/devel:tools:scm.repo"
     when: ansible_pkg_mgr == 'zypper'
   - name: Install package dependencies - Refresh Repos
     become: yes
     shell: "http_proxy={{ http_proxy }} zypper --no-gpg-checks refresh"
     when: ansible_pkg_mgr == 'zypper'
   - name: Install package dependencies - Ruby development libraries
     become: yes
     ignore_errors: yes
     shell: "http_proxy={{ http_proxy }} zypper install --auto-agree-with-licenses -y {{item}}"
     with_items:
       - gcc
       - curl
       - make
       - libopenssl-devel
       - sqlite3-devel
     when: ansible_pkg_mgr == 'zypper'
   - name: checking that RVM is installed
     stat:
       path: /etc/profile.d/rvm.sh
     ignore_errors: True
     register: rvm_install_result
     when: ansible_pkg_mgr == 'zypper'
   - name: Check for mpapis gpg key as root
     shell: gpg --list-keys mpapis
     sudo: true
     register: mpapis_gpg_key_exists
     ignore_errors: true
     when: ansible_pkg_mgr == 'zypper'
   - name: Curl insecure fix
     become: yes
     shell: "echo insecure >> ~/.curlrc"
   - name: receiving key as root
     shell: "https_proxy={{ http_proxy }} curl -sSL -k https://rvm.io/mpapis.asc | gpg --import -"
     sudo: true
     when: ansible_pkg_mgr == 'zypper' and mpapis_gpg_key_exists is defined and mpapis_gpg_key_exists.rc is defined and mpapis_gpg_key_exists.rc != 0 and rvm_install_result.stat.exists != true
   - name: Get rvm Installer
     become: yes
     shell: "https_proxy={{ http_proxy }} wget --no-check-certificate -O /tmp/rvm-installer.sh https://get.rvm.io"
     when: ansible_pkg_mgr == 'zypper' and rvm_install_result.stat.exists != true
   - name: set executable RVM installer
     become: true
     file:
       path: /tmp/rvm-installer.sh
       mode: 0755
     when: ansible_pkg_mgr == 'zypper' and rvm_install_result.stat.exists != true
   - name: installing RVM as root
     command: "/tmp/rvm-installer.sh --path /usr/local/rvm stable"
     become: true
     when: ansible_pkg_mgr == 'zypper' and rvm_install_result.stat.exists != true
   - name: removing RVM installer
     become: true
     file:
       path: /tmp/rvm-installer.sh
       state: absent
     when: ansible_pkg_mgr == 'zypper' and rvm_install_result.stat.exists != true
   - name: setting RVM autolibs on as root
     command: "/usr/local/rvm/bin/rvm autolibs 3"
     sudo: true
     when: ansible_pkg_mgr == 'zypper' and rvm_install_result.stat.exists != true
   - name: updating RVM as root
     shell: "source /etc/profile.d/rvm.sh && rvm get stable executable=/bin/bash"
     sudo: true
     when: ansible_pkg_mgr == 'zypper' and rvm_install_result.stat.exists == true
   - name: setting default Ruby version as root
     shell: "source /etc/profile.d/rvm.sh && rvm use ruby-2.2.2"
     register: rvm_select_ruby_version_root
     ignore_errors: True
     changed_when: False
     when: ansible_pkg_mgr == 'zypper'
   - name: installing Ruby as root
     command: "/usr/local/rvm/bin/rvm install ruby-2.2.2"
     sudo: true
     when: ansible_pkg_mgr == 'zypper' and rvm_select_ruby_version_root|failed
   - name: setting default Ruby version as root
     shell: "source /etc/profile.d/rvm.sh && rvm use ruby-2.2.2"
     register: rvm_select_ruby_version_root
     ignore_errors: True
     changed_when: False
     when: ansible_pkg_mgr == 'zypper'
   - name: RVM install fluentd
     become: yes
     shell: http_proxy={{ http_proxy }} bash -lc "gem install fluentd -v '~> 0.12.0' --no-ri --no-rdoc"
     environment:
       PATH: "{{ ansible_env.PATH }}:/usr/local/rvm/gems/ruby-2.2.2/bin:/usr/local/rvm/gems/ruby-2.2.2@global/bin:/usr/local/rvm/rubies/ruby-2.2.2/bin:/usr/lib/mit/bin:/usr/local/rvm/bin"
       MY_RUBY_HOME: /usr/local/rvm/rubies/ruby-2.2.2
       GEM_HOME: /usr/local/rvm/gems/ruby-2.2.2
     when: ansible_pkg_mgr == 'zypper'
   - name: Install package dependencies - APT wget
     become: yes
     shell: "http_proxy={{ http_proxy }} apt-get install -y -f --allow-unauthenticated wget"
     when: ansible_pkg_mgr == 'apt'
   - name: Install package dependencies - APT python-software-properties
     become: yes
     ignore_errors: yes
     shell: "http_proxy={{ http_proxy }} apt-get install -y -f --allow-unauthenticated python-software-properties"
     when: ansible_pkg_mgr == 'apt'
   - name: td-agent | Get TD gpg key
     become: yes
     shell: "http_proxy={{ http_proxy }} wget --no-check-certificate http://packages.treasuredata.com/GPG-KEY-td-agent -P {{ansible_env.HOME}}"
     when: ansible_pkg_mgr == 'apt'
   - name: td-agent | Add TD gpg key
     become: yes
     shell: cat {{ansible_env.HOME}}/GPG-KEY-td-agent | sudo apt-key add -
     when: ansible_pkg_mgr == 'apt'
   - name: td-agent | Add TD repository
     become: yes
     shell: "http_proxy={{ http_proxy }} add-apt-repository 'deb http://packages.treasuredata.com/3/ubuntu/xenial/ xenial contrib'"
     when: ansible_pkg_mgr == 'apt'
   - name: td-agent | Update repo with td-agent info
     become: yes
     shell: "http_proxy={{ http_proxy }} apt-get update --allow-unauthenticated -y"
     when: ansible_pkg_mgr == 'apt'
   - name: td-agent | Install td-agent
     become: yes
     shell: "http_proxy={{ http_proxy }} apt-get install -y -f --allow-unauthenticated td-agent"
     when: ansible_pkg_mgr == 'apt'
   - name: td-agent | Install td-agent(insightrepo)
     yum:
       name: td-agent
       state: latest
       disablerepo: '*'
       enablerepo: insightrepo
     when: ansible_pkg_mgr == 'yum'
   - name: td-agent | Copy setup script
     become: yes
     template:
       src: ../files/td-agent-setup.sh
       dest: /tmp/td-agent-setup.sh
       mode: 0755
     when: ansible_pkg_mgr == 'zypper'
   - name: td-agent | Run setup script
     become: yes
     shell: /tmp/td-agent-setup.sh
     when: ansible_pkg_mgr == 'zypper'
   - name: td-agent | copy Insightfinder plugin
     become: yes
     copy:
       src: ../files/out_InsightFinder.rb
       dest: /etc/td-agent/plugin/out_InsightFinder.rb
       owner: root
       group: root
       mode: 0644
     when: ansible_pkg_mgr != 'zypper'
   - name: td-agent | copy Insightfinder plugin SUSE
     become: yes
     copy:
       src: ../files/out_InsightFinder.rb
       dest: /etc/fluent/plugin/out_InsightFinder.rb
       owner: root
       group: root
       mode: 0644
     when: ansible_pkg_mgr == 'zypper'
   - name: td-agent | Modify Insightfinder plugin
     lineinfile:
       path: /etc/td-agent/plugin/out_InsightFinder.rb
       regexp: '@http = Net::HTTP.new'
       line: '@http = Net::HTTP.new(@uri.host, @uri.port, nil)'
       state: present
     when: ansible_pkg_mgr != 'zypper' and disable_td_proxy == 'yes'
   - name: td-agent | Modify Insightfinder plugin SUSE
     lineinfile:
       path: /etc/fluent/plugin/out_InsightFinder.rb
       regexp: '@http = Net::HTTP.new'
       line: '@http = Net::HTTP.new(@uri.host, @uri.port, nil)'
       state: present
     when: ansible_pkg_mgr == 'zypper' and disable_td_proxy == 'yes'
   - name: td-agent | Add config_file
     become: yes
     template:
       src: td-agent.conf.template
       dest: /etc/td-agent/td-agent.conf
       mode: 0644
     when: ansible_pkg_mgr != 'zypper' and agentType != 'metric-log'
     tags:
     - td-agent-config
   - name: td-agent | Add config_file SUSE
     become: yes
     template:
       src: td-agent.conf.template
       dest: /etc/fluent/fluent.conf
       mode: 0644
     when: ansible_pkg_mgr == 'zypper' and agentType != 'metric-log'
     tags:
     - td-agent-config
   - name: td-agent | Add config_file
     become: yes
     template:
       src: td-agent.conf.dual.template
       dest: /etc/td-agent/td-agent.conf
       mode: 0644
     when: ansible_pkg_mgr != 'zypper' and agentType == 'metric-log'
     tags:
     - td-agent-config
   - name: td-agent | Add config_file SUSE
     become: yes
     template:
       src: td-agent.conf.dual.template
       dest: /etc/fluent/fluent.conf
       mode: 0644
     when: ansible_pkg_mgr == 'zypper' and agentType == 'metric-log'
     tags:
     - td-agent-config
   - name: td-agent | check processes fluent
     become: yes
     shell: ps -ef | grep fluent | awk '{printf "%s ",$2}'
     register: awk_test
   - name: td-agent | Stop fluentd daemon
     become: yes
     shell: "kill -9 {{item}}"
     ignore_errors: yes
     with_items:
       - "{{ awk_test.stdout_lines }}"
     when: ansible_pkg_mgr == 'zypper'
   - name: td-agent | check processes td-agent
     become: yes
     shell: ps -ef | grep td-agent | awk '{printf "%s ",$2}'
     register: td_process
     when: manual_start == 'yes' and ansible_pkg_mgr != 'zypper'
   - name: td-agent | Stop td-agent daemon
     become: yes
     shell: "kill -9 {{item}}"
     ignore_errors: yes
     with_items:
       - "{{ td_process.stdout_lines }}"
     when: manual_start == 'yes' and ansible_pkg_mgr != 'zypper'
   - name: td-agent | Install fluentd gem dependency
     become: yes
     shell: http_proxy={{ http_proxy }} bash -lc "fluent-gem install fluent-mixin-type-converter"
     when: ansible_pkg_mgr == 'zypper'
   - name: td-agent | Start td-agent daemon
     become: yes
     shell: bash -lc "fluentd -c /etc/fluent/fluent.conf -p /etc/fluent/plugin/ -o /var/log/fluent/fluent.log -d /var/run/fluent/fluent.pid --use-v1-config"
     environment:
       PATH: "{{ ansible_env.PATH }}:/usr/local/rvm/gems/ruby-2.2.2/bin:/usr/local/rvm/gems/ruby-2.2.2@global/bin:/usr/local/rvm/rubies/ruby-2.2.2/bin:/usr/lib/mit/bin:/usr/local/rvm/bin"
     when: ansible_pkg_mgr == 'zypper'
   - name: td-agent | Start td-agent daemon(manual)
     become: yes
     shell: bash -lc "td-agent -c /etc/td-agent/td-agent.conf -p /etc/td-agent/plugin/ -o /var/log/td-agent/td-agent.log --use-v1-config &"
     async: 45
     poll: 0
     when: manual_start == 'yes' and ansible_pkg_mgr != 'zypper'
   - name: td-agent | Start td-agent daemon
     become: yes
     service:
      name: td-agent
      enabled: yes
      state: restarted
     when: manual_start == 'no' and ansible_pkg_mgr != 'zypper'