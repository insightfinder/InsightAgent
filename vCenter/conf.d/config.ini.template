[insightFinder_vars]
# https://app.insightfinder.com
host_url = 
http_proxy = 
https_proxy = 
licenseKey = 
project_name = 
username = 
# number of retries for http requests in case of failure
retries = 
# time between retries
sleep_seconds = 

[vCenter_vars]
# skip the protocol prefix in the host and proxy URLs; only http protocol is supported currently
# e.g., use "localhost:80" instead of "http://localhost:80"
host = 
http_proxy = 
username = 
# do not enter the password here; instead, enter the obfuscated password (run 'ifobfuscate.py')
password = 
# enter a list of virtual machine names separated by comma(,) or a regex to match from all available virtual machine names
# if list and regex are both provided, the list is given precedence and the regex param will be ignored
# if both are missing, no virtual machines will be processed (set regex to < .* > to select all virtual machines)
virtual_machines_list = 
virtual_machines_regex = 
# enter a list of host system names separated by comma(,) or a regex to match from all available host system names
# if list and regex are both provided, the list is given precedence and the regex param will be ignored
# if both are missing, no host systems will be processed (set regex to < .* > to select all host systems)
# NOTE: the selected hosts are also used to filter/whitelist virtual machines
hosts_list = 
hosts_regex = 
# enter a list of datastore names separated by comma(,) or a regex to match from all available datastore names
# if list and regex are both provided, the list is given precedence and the regex param will be ignored
# if both are missing, no datastores will be processed (set regex to < .* > to select all datastores)
datastores_list = 
datastores_regex = 
# enter a list of performance metrics separated by comma(,) or a regex to match from all available metrics
# if list and regex are both provided, the list is given precedence and the regex param will be ignored
# if both are missing, no metrics will be processed (set regex to < .* > to select all metrics)
# Metrics should follow the format: <counter.groupInfo.key>.<counter.nameInfo.key>.<counter.unitInfo.key>.<counter.rollupType>
# where, counter is a vim.PerformanceManager.CounterInfo object
# e.g., cpu.usage.percent.average, mem.shared.kiloBytes.maximum, disk.maxTotalLatency.millisecond.latest, net.usage.kiloBytesPerSecond.minimum
metrics_list = 
metrics_regex = 

[agent_vars]
# number of threads to be used in the multiprocessing pool
thread_pool = 
# Maximum size of a data chunk to be sent to IF, in kilobytes
chunk_size_kb = 
