# ----------------------------------- powerFlex ---------------------------------------------
[powerFlex]
# instance type in the Dell PowerFlex.  PowerFlex API doc: https://developer.dell.com/apis/4008/versions/3.5.1/PowerFlex_3.5.1_API.json
instanceType = ProtectionDomain 

# Specify the metrics file(list all the needed metrics there) in this section. It should be located inside conf.d directory.
# The metrics info in the txt file should be one metric per line. NESTED STRCUTURE IS NOT SUPPORTED.
metricPath = collectAllMetricsPowerFlex.json

userName = 
password = 
# The main host URL.
connectionUrl = 

# These endpoint doesn't need to be changed if using the API from PowerFlex Doc
idEndPoint = /api/types/{$instanceType}/instances

# ----------------------------------- powerScale ---------------------------------------------
[powerScale]
https://developer.dell.com/apis/4088/versions/9.2.0.0/docs/1introduction.md
# Specify the metrics file(list all the needed metrics there) in this section. It should be located inside conf.d directory.
# The metrics info in the txt file should be one metric per line. NESTED STRCUTURE IS NOT SUPPORTED.
metricPath = collectAllMetricsPowerScale.json
instanceNameField = node
timeStampField = time
# PowerScale metric return payload has one extra layer to access the metric array. Please fill the key name here.
firstLayerkey = 

userName = 
password = 
# The main host URL.
connectionUrl =

# ----------------------------------- powerStore ---------------------------------------------
[powerStore]
# Specify the API endpoints and the metrics needed from each endpoint in one json file. It should be located inside conf.d directory.
# Object with the metric name will be read and together with whatever inside that object.
# NESTED STRCUTURE to sepcify key within each metric object IS NOT SUPPORTED.
metricPath = collectAllMetricsPowerStore.json
timeStampField = timestamp
instanceType = cluster
instanceNameField = cluster_id
metricType = performance_metrics_by_cluster
# The metric data interval output from server. Choose from: Best_Available,Five_Sec,Twenty_Sec,Five_Mins,One_Hour,One_Day
metric_interval_from_server = Five_Mins

userName = 
password = 
# The main host URL.
connectionUrl = 
# ----------------------------------- powerFlexManager ---------------------------------------------
[powerFlexManager]
apiEndpoint = /Api/V1/Log
timeStampField = timeStamp
instanceNameField = agentId

userName = 
password = 
# Do NOT change this domain
domain = VXFMLOCAL
# The main host URL.
userAgent = go version go1.18.1 linux/amd64
connectionUrl = localhost

# ----------------------------------- insightfinder section ---------------------------------------------
[insightfinder]
user_name =
license_key =
token =
# Name of the project created in the InsightFinder UI. If this project does not exist, agent will create it automatically. If multiple projects, seperate project names by `;`, like project_1;project_2
project_name = 
# Prefix of the project name, the rest of the project name will be used as the system name
project_name_prefix =
# Name of system owned by project. If project_name does not exist in InsightFinder, agent will create a new system automatically from this field or project_name.
system_name = 
# metric, metricreplay, log, logreplay, alert, alertreplay, incident, incidentreplay, deployment, deploymentreplay, trace, tracereplay
project_type = metric
sampling_interval = 10
run_interval = 5

if_url = https://app.insightfinder.com
if_http_proxy =
if_https_proxy =
metadata_max_instances = 