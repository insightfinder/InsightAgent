apiVersion: v1
kind: ConfigMap
metadata:
  name: if-power-collector-config-ini-cm
  namespace: {{ .Release.Namespace }}
data:
    {{- range $index, $configValue := .Values.powerCollectorAgent.config }}
    {{$configValue.name}}.ini: |-
        [{{$configValue.type}}]
        connectionUrl = {{ $configValue.connectionUrl }}
        username = {{ $configValue.username }}
        password = {{ $configValue.password }}
        
        timezone = UTC
        target_timestamp_timezone = UTC
        agent_http_proxy =
        agent_https_proxy =

        {{- if eq $configValue.type "powerFlex" }}
        metricPath = {{ $configValue.name }}.json
        idEndPoint = /api/types/{$instanceType}/instances
        instanceType = {{ $configValue.instanceType}}
        {{- end }}

        {{- if eq $configValue.type "powerScale" }}
        metricPath = {{ $configValue.name }}.json
        instanceNameField = {{ $configValue.instanceNameField }}
        timeStampField = {{ $configValue.timeStampField }}
        firstLayerkey = {{ $configValue.firstLayerkey }}
        {{- end }}

        {{- if eq $configValue.type "powerStore" }}
        metricPath = {{ $configValue.name }}.json
        timeStampField = {{ $configValue.timeStampField }}
        instanceType = {{ $configValue.instanceType}}
        instanceNameField = {{ $configValue.instanceNameField }}
        metricType = {{ $configValue.metricType }}
        metric_interval_from_server = {{ $configValue.metric_interval_from_server }}
        {{- end }}

        {{- if eq $configValue.type "powerFlexManager" }}
        apiEndpoint = /Api/V1/Log
        timeStampField = timeStamp
        instanceNameField = agentId
        domain = VXFMLOCAL
        userAgent = go version go1.18.1 linux/amd64
        {{- end }}


        [insightfinder]
        user_name = {{ $.Values.insightfinder.username}}
        license_key = {{ $.Values.insightfinder.licenseKey }}
        token =
        project_name = {{ $configValue.IF_ProjectName }}
        project_name_prefix =
        system_name = {{ $configValue.IF_SystemName }}

        {{- if eq $configValue.type "powerFlexManager" }}
        project_type = log
        {{- else }}
        project_type = metric
        {{- end }}
        
        sampling_interval = {{ $.Values.powerCollectorAgent.samplingInterval }}
        run_interval = {{ $.Values.powerCollectorAgent.runInterval }}

        if_url = {{ $.Values.insightfinder.url }}
        if_http_proxy =
        if_https_proxy =
        metadata_max_instances = 
    {{- end }}